cmake_minimum_required(VERSION 3.1.0)
set (CMAKE_CXX_STANDARD 11)
set(ARM_CXX_FLAGS "-mfloat-abi=hard -mfpu=neon -ftree-vectorize")
project( vision )
SET(COMPILE_DEFINITIONS -Werror)
find_package( OpenCV REQUIRED )
FIND_PACKAGE(Qt4 REQUIRED)
SET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${ARM_CXX_FLAGS}) 
SET(interface_SOURCES ../interface/fenetre.cpp )
SET(interface_HEADERS ../interface/fenetre.h)
SET(shaders_SOURCES  ../shaders/)
SET(other_SOURCES ../main.cpp 
../camera/camera.h ../camera/camera.cpp  ../camera/mmalincludes.h ../camera/cameracontrol.h ../camera/cameracontrol.cpp 
../vision/vision.h ../vision/vision.cpp ../vision/graphics.h  ../vision/graphics.cpp 
../segment/disjoint-set.h ../segment/misc.h ../segment/segment-graph.h ../segment/segment-image.h  )
QT4_WRAP_CPP(interface_HEADERS_MOC ${interface_HEADERS} )
INCLUDE(${QT_USE_FILE})
ADD_DEFINITIONS(${QT_DEFINITIONS})
include_directories(/opt/vc/include)
include_directories(/opt/vc/userland-master/interface/vcos)
include_directories(/opt/vc/userland-master)
include_directories(/opt/vc/userland-master/interface/vcos/pthreads)
include_directories(/opt/vc/userland-master/interface/vmcs_host/linux)
include_directories(/opt/vc/userland-master/host_applications/linux/libs/bcm_host/include)
link_directories(/opt/vc/lib)
add_executable(vision ${other_SOURCES} ${interface_SOURCES} ${interface_HEADERS_MOC} ${shaders_SOURCES})
target_link_libraries(vision libmmal_core.so libmmal_util.so libmmal_vc_client.so libvcos.so libbcm_host.so GLESv2 EGL ${OpenCV_LIBS} ${QT_LIBRARIES})
